name: 'release'

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true
      next:
        description: "Next version"
        required: false

jobs:
  build:
#    if: startsWith(github.event.head_commit.message, 'üèÅ Releasing version') != true && startsWith(github.event.head_commit.message, '‚¨ÜÔ∏è  Next version') != true
    runs-on: ubuntu-latest

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v2

      - name: 'Set up Java'
        uses: actions/setup-java@v2
        with:
          java-version: 16
          distribution: 'zulu'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: 'Cache Maven packages'
        uses: actions/cache@v2.1.7
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

  - name: Configure GPG Key
    run: |
      echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
    env:
      GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}

      - name: 'Build'
        run: ./mvnw -B --file pom.xml verify

      - name: 'Prepare Release'
        run: ./mvnw -B --file pom.xml release:prepare -Prelease -DreleaseVersion=${RELEASE_VERSION} -DdevelopmentVersion=${NEXT_VERSION}
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          RELEASE_VERSION: ${{ github.event.inputs.version }}
          NEXT_VERSION: ${{ github.event.inputs.next }}

      - name: 'Perform Release'
        run: ./mvnw -B --file pom.xml release:prepare -Prelease
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
