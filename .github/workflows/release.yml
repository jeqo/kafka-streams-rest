name: 'release'

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true

jobs:
  release:
#    if: startsWith(github.event.head_commit.message, '🏁 Releasing version') != true && startsWith(github.event.head_commit.message, '⬆️  Next version') != true
    runs-on: ubuntu-latest

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v2

      - name: 'Set up Java'
        uses: actions/setup-java@v2
        with:
          java-version: 16
          distribution: 'zulu'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: 'Cache Maven packages'
        uses: actions/cache@v2.1.7
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Version
        run: |
          VERSION=${{ github.event.inputs.version }}
          echo "Updating POMs to version $VERSION"
          ./mvnw --no-transfer-progress -B versions:set versions:commit -DnewVersion=$VERSION
          # echo $VERSION > VERSION
          # sed -i -e "s/^\:project-version\:\ .*/:project-version: ${VERSION}/g" README.md
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git commit -a -m "Releasing version $VERSION"
          git push origin main

      - name: Release
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          # TODO: fix once nexus plugin supports jdk17
          MAVEN_OPTS: --illegal-access=permit
        run: |
          export GPG_TTY=$(tty)
          ./mvnw --no-transfer-progress -B --file pom.xml \
            -Drepository.url=https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git \
            -Dmaven.site.skip=true -Drelease=true deploy

#      - name: 'Prepare Release'
#        run: ./mvnw -B --no-transfer-progress --file pom.xml release:prepare -Prelease -DreleaseVersion=${RELEASE_VERSION} -DdevelopmentVersion=${NEXT_VERSION}
#        env:
#          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
#          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
#          RELEASE_VERSION: ${{ github.event.inputs.version }}
#          NEXT_VERSION: ${{ github.event.inputs.next }}
#
#      - name: 'Perform Release'
#        run: ./mvnw -B --no-transfer-progress --file pom.xml release:prepare -Prelease
#        env:
#          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
#          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
